{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/Controls.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/lib/loadGLTF.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/scene/Box.js","webpack:///./src/index.js","webpack:///./src/scene/lights.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","mapValues","obj","fn","fromEntries","entries","map","k","v","fromObjectToSlider","State","Slider","min","max","step","scale","mapping","x","Math","pow","inverseMapping","log10","initControls","options","stateObject","controlsState","controlsInstance","hideControls","wrapGUI","expanded","closeControls","styles","style","document","createElement","type","innerHTML","head","appendChild","WebGLApp","background","backgroundAlpha","fov","frustumSize","near","far","isRunning","time","dt","performance","now","resize","width","height","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","left","right","top","bottom","updateProjectionMatrix","composer","scene","traverse","draw","saveScreenshot","fileName","dataURI","canvas","toDataURL","saveDataURI","startRecording","format","CCapture","workersPath","motionBlurFrames","start","stopRecording","stop","save","undefined","update","xrframe","orbitControls","isTransformControls","world","cannonDebugger","bodies","forEach","body","isXR","xr","enabled","isPresenting","render","setAnimationLoop","animate","stats","begin","maxDeltaTime","capture","end","this","THREE","antialias","postprocessing","alpha","preserveDrawingBuffer","sortObjects","gamma","outputEncoding","domElement","setClearColor","maxPixelRatio","orthographic","position","copy","cameraPosition","lookAt","gl","getContext","addEventListener","isDragging","event","isPrimary","offsetX","offsetY","child","onPointerDown","y","dragX","dragY","onPointerMove","onPointerUp","maxMultisampling","getParameter","MAX_SAMPLES","EffectComposer","multisampling","frameBufferType","addPass","RenderPass","OrbitControls","enableDamping","dampingFactor","enablePan","keys","showWorldWireframes","autoUpdate","showFps","Stats","showPanel","dom","controls","loadGPUTier","getGPUTier","glContext","then","gpuTier","gpu","tier","isMobile","fps","getClearColor","getClearAlpha","Boolean","index","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadEnvMap","url","loader","Error","Array","isArray","extension","lastIndexOf","RGBELoader","setDataType","loadAsync","EXRLoader","texture","linear","encoding","pmrem","pmremGenerator","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","dispose","image","equirectangularToPMREMCube","equirectangularToCube","HDRCubeTextureLoader","compileCubemapShader","fromCubemap","cubeToPMREMCube","filter","option","includes","TypeError","queued","_getQueued","queuedOptions","omit","JSON","stringify","hash","toFixed","replace","_extractType","find","item","ext","test","itemLoadingStart","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","loadingStart","pMap","logError","percent","concurrency","errors","groupLog","Promise","resolve","reject","GLTFLoader","meshOpt","setMeshoptDecoder","MeshoptDecoder","draco","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","load","err","loadGLTF","fetch","response","json","loadImage","crossorigin","initTexture","loadTexture","arrayBuffer","text","groupCollapsed","groupEnd","Box","webgl","color","geometry","material","box","add","rotation","location","search","querySelector","roughness","movement","speed","frequency","amplitude","visibility","assets","hemiLight","setHSL","groundColor","set","dirLight","multiplyScalar","addNaturalLight"],"mappings":"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","file":"app.94e03802.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([323,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as THREE from 'three'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\n\nlet controls\n\n// https://github.com/mrdoob/three.js/blob/670b1e9e85356d98efa4c702e93c85dd52f01e1e/src/math/Color.js#L3\nconst _colorKeywords = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32,\n}\n\nfunction mapValues(obj, fn) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]))\n}\n\nfunction fromObjectToSlider(object) {\n  return State.Slider(object.value, {\n    min: object.min,\n    max: object.max,\n    step: object.step || 0.01,\n    ...(object.scale === 'exp' && {\n      min: object.min || 0.001,\n      step: object.step || 0.001,\n      mapping: (x) => Math.pow(10, x),\n      inverseMapping: Math.log10,\n    }),\n  })\n}\n\nexport function initControls(object, options = {}) {\n  const stateObject = mapValues(object, (value) => {\n    if (\n      typeof value === 'object' &&\n      (value.hasOwnProperty('value') ||\n        value.hasOwnProperty('max') ||\n        value.hasOwnProperty('min') ||\n        value.hasOwnProperty('step'))\n    ) {\n      return fromObjectToSlider(value)\n    }\n\n    if (typeof value === 'object') {\n      return mapValues(value, (v) => {\n        if (\n          typeof v === 'object' &&\n          (v.hasOwnProperty('value') ||\n            v.hasOwnProperty('max') ||\n            v.hasOwnProperty('min') ||\n            v.hasOwnProperty('step'))\n        ) {\n          return fromObjectToSlider(v)\n        }\n\n        return v\n      })\n    }\n\n    return value\n  })\n\n  const controlsState = State(stateObject)\n  const controlsInstance = options.hideControls\n    ? controlsState\n    : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n  // add the custom controls-gui styles\n  if (!options.hideControls) {\n    const styles = `\n      [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n        content: initial !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n        text-indent: 6px !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n        content: initial !important;\n      }\n    `\n    const style = document.createElement('style')\n    style.type = 'text/css'\n    style.innerHTML = styles\n    document.head.appendChild(style)\n  }\n\n  controls = controlsInstance\n  return controlsInstance\n}\n\nfunction extractAccessor(fnString) {\n  if (fnString.slice(-1) === '}') {\n    fnString = fnString.slice(0, -1)\n  }\n\n  const accessorStart = fnString.indexOf('.controls.') + '.controls.'.length\n  fnString = fnString.slice(accessorStart)\n\n  return fnString.trim()\n}\n\nexport function wireValue(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  const key = accessor.includes('.') ? accessor.slice(accessor.lastIndexOf('.') + 1) : accessor\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      if (object[key].isColor) {\n        object[key].set(cons[accessor].value)\n      } else {\n        object[key] = cons[accessor].value\n      }\n    }\n  })\n\n  let value = fn()\n\n  if (typeof value === 'string' && (value.startsWith('#') || value in _colorKeywords)) {\n    value = new THREE.Color(value)\n  }\n\n  return value\n}\n\nexport function wireUniform(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  const key = accessor.includes('.') ? accessor.slice(accessor.lastIndexOf('.') + 1) : accessor\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      if (object.uniforms[key].value.isColor) {\n        object.uniforms[key].value.set(cons[accessor].value)\n      } else {\n        object.uniforms[key].value = cons[accessor].value\n      }\n    }\n  })\n\n  let value = fn()\n\n  if (typeof value === 'string' && (value.startsWith('#') || value in _colorKeywords)) {\n    value = new THREE.Color(value)\n  }\n\n  return { value }\n}\n","import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer, RenderPass } from 'postprocessing'\nimport cannonDebugger from 'cannon-es-debugger'\nimport CCapture from 'ccapture.js'\nimport { initControls } from './Controls'\n\nexport default class WebGLApp {\n  #width\n  #height\n  #capturer\n  isRunning = false\n  time = 0\n  dt = 0\n  #lastTime = performance.now()\n  #updateListeners = []\n  #pointerdownListeners = []\n  #pointermoveListeners = []\n  #pointerupListeners = []\n  #startX\n  #startY\n\n  get background() {\n    return this.renderer.getClearColor(new THREE.Color())\n  }\n\n  get backgroundAlpha() {\n    return this.renderer.getClearAlpha()\n  }\n\n  set background(background) {\n    this.renderer.setClearColor(background, this.backgroundAlpha)\n  }\n\n  set backgroundAlpha(backgroundAlpha) {\n    this.renderer.setClearColor(this.background, backgroundAlpha)\n  }\n\n  get isRecording() {\n    return Boolean(this.#capturer)\n  }\n\n  constructor({\n    background = '#111',\n    backgroundAlpha = 1,\n    fov = 45,\n    frustumSize = 3,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: !options.postprocessing,\n      alpha: backgroundAlpha !== 1,\n      // enabled for recording gifs or videos,\n      // might disable it for performance reasons\n      preserveDrawingBuffer: true,\n      ...options,\n    })\n    if (options.sortObjects !== undefined) {\n      this.renderer.sortObjects = options.sortObjects\n    }\n    if (options.gamma) {\n      this.renderer.outputEncoding = THREE.sRGBEncoding\n    }\n    if (options.xr) {\n      this.renderer.xr.enabled = true\n    }\n\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 1.5\n    // clamp delta to avoid stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup the camera\n    const aspect = this.#width / this.#height\n    if (!options.orthographic) {\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far)\n    } else {\n      this.camera = new THREE.OrthographicCamera(\n        -(frustumSize * aspect) / 2,\n        (frustumSize * aspect) / 2,\n        frustumSize / 2,\n        -frustumSize / 2,\n        near,\n        far\n      )\n      this.camera.frustumSize = frustumSize\n    }\n    this.camera.position.copy(options.cameraPosition || new THREE.Vector3(0, 0, 4))\n    this.camera.lookAt(0, 0, 0)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic pointer events handler, the second argument\n    // contains the x and y relative to the top left corner\n    // of the canvas.\n    // In case of touches with multiple fingers, only the\n    // first touch is registered.\n    this.isDragging = false\n    this.canvas.addEventListener('pointerdown', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = true\n      this.#startX = event.offsetX\n      this.#startY = event.offsetY\n      // call onPointerDown method\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerDown === 'function') {\n          child.onPointerDown(event, { x: event.offsetX, y: event.offsetY })\n        }\n      })\n      // call the pointerdown listeners\n      this.#pointerdownListeners.forEach((fn) => fn(event, { x: event.offsetX, y: event.offsetY }))\n    })\n    this.canvas.addEventListener('pointermove', (event) => {\n      if (!event.isPrimary) return\n      // call onPointerMove method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerMove === 'function') {\n          child.onPointerMove(event, position)\n        }\n      })\n      // call the pointermove listeners\n      this.#pointermoveListeners.forEach((fn) => fn(event, position))\n    })\n    this.canvas.addEventListener('pointerup', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = false\n      // call onPointerUp method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerUp === 'function') {\n          child.onPointerUp(event, position)\n        }\n      })\n      // call the pointerup listeners\n      this.#pointerupListeners.forEach((fn) => fn(event, position))\n\n      this.#startX = undefined\n      this.#startY = undefined\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      const maxMultisampling = this.gl.getParameter(this.gl.MAX_SAMPLES)\n      this.composer = new EffectComposer(this.renderer, {\n        multisampling: Math.min(8, maxMultisampling),\n        frameBufferType: options.gamma ? THREE.HalfFloatType : undefined,\n        ...options,\n      })\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up OrbitControls\n    if (options.orbitControls) {\n      this.orbitControls = new OrbitControls(this.camera, this.canvas)\n\n      this.orbitControls.enableDamping = true\n      this.orbitControls.dampingFactor = 0.15\n      this.orbitControls.enablePan = false\n\n      if (options.orbitControls instanceof Object) {\n        Object.keys(options.orbitControls).forEach((key) => {\n          this.orbitControls[key] = options.orbitControls[key]\n        })\n      }\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugger = cannonDebugger(this.scene, this.world.bodies, { autoUpdate: false })\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      this.controls = initControls(options.controls, options)\n    }\n\n    // detect the gpu info\n    this.loadGPUTier = getGPUTier({ glContext: this.gl }).then((gpuTier) => {\n      this.gpu = {\n        name: gpuTier.gpu,\n        tier: gpuTier.tier,\n        isMobile: gpuTier.isMobile,\n        fps: gpuTier.fps,\n      }\n    })\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    } else {\n      const aspect = width / height\n      this.camera.left = -(this.camera.frustumSize * aspect) / 2\n      this.camera.right = (this.camera.frustumSize * aspect) / 2\n      this.camera.top = this.camera.frustumSize / 2\n      this.camera.bottom = -this.camera.frustumSize / 2\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer, width and height\n    // are automatically extracted from the renderer\n    if (this.composer) {\n      this.composer.setSize()\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse((obj) => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 1920, height = 1080, fileName = 'Screenshot.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  // start recording of a gif or a video\n  startRecording = ({\n    width = 1920,\n    height = 1080,\n    fileName = 'Recording',\n    format = 'gif',\n    ...options\n  } = {}) => {\n    if (this.#capturer) {\n      return\n    }\n\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    this.#capturer = new CCapture({\n      format,\n      name: fileName,\n      workersPath: '',\n      motionBlurFrames: 2,\n      ...options,\n    })\n    this.#capturer.start()\n  }\n\n  stopRecording = () => {\n    if (!this.#capturer) {\n      return\n    }\n\n    this.#capturer.stop()\n    this.#capturer.save()\n    this.#capturer = undefined\n\n    // reset to default size\n    this.resize()\n    this.draw()\n  }\n\n  update = (dt, time, xrframe) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse((obj) => {\n      if (typeof obj.update === 'function' && !obj.isTransformControls) {\n        obj.update(dt, time, xrframe)\n      }\n    })\n\n    if (this.world) {\n      // update the cannon-es physics engine\n      this.world.step(1 / 60, dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugger) {\n        this.cannonDebugger.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach((body) => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  onPointerDown(fn) {\n    this.#pointerdownListeners.push(fn)\n  }\n\n  onPointerMove(fn) {\n    this.#pointermoveListeners.push(fn)\n  }\n\n  onPointerUp(fn) {\n    this.#pointerupListeners.push(fn)\n  }\n\n  offUpdate(fn) {\n    const index = this.#updateListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#updateListeners.splice(index, 1)\n  }\n\n  offPointerDown(fn) {\n    const index = this.#pointerdownListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerdownListeners.splice(index, 1)\n  }\n\n  offPointerMove(fn) {\n    const index = this.#pointermoveListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointermoveListeners.splice(index, 1)\n  }\n\n  offPointerUp(fn) {\n    const index = this.#pointerupListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerupListeners.splice(index, 1)\n  }\n\n  draw = () => {\n    // postprocessing doesn't currently work in WebXR\n    const isXR = this.renderer.xr.enabled && this.renderer.xr.isPresenting\n\n    if (this.composer && !isXR) {\n      this.composer.render(this.dt)\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.isRunning) return\n    this.isRunning = true\n\n    // draw immediately\n    this.draw()\n\n    this.renderer.setAnimationLoop(this.animate)\n    return this\n  }\n\n  stop = () => {\n    if (!this.isRunning) return\n    this.renderer.setAnimationLoop(null)\n    this.isRunning = false\n    return this\n  }\n\n  animate = (now, xrframe) => {\n    if (!this.isRunning) return\n\n    if (this.stats) this.stats.begin()\n\n    this.dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += this.dt\n    this.#lastTime = now\n    this.update(this.dt, this.time, xrframe)\n    this.draw()\n\n    if (this.#capturer) this.#capturer.capture(this.canvas)\n\n    if (this.stats) this.stats.end()\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","import * as THREE from 'three'\n// TODO lazy load these, or put them in different files\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader'\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\n\nexport default function loadEnvMap(url, { renderer, ...options }) {\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  const isEquirectangular = !Array.isArray(url)\n\n  let loader\n  if (isEquirectangular) {\n    const extension = url.slice(url.lastIndexOf('.') + 1)\n\n    switch (extension) {\n      case 'hdr': {\n        loader = new RGBELoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'exr': {\n        loader = new EXRLoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'png':\n      case 'jpg': {\n        loader = new THREE.TextureLoader().loadAsync(url).then((texture) => {\n          if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n            texture.encoding = THREE.sRGBEncoding\n          }\n          return texture\n        })\n        break\n      }\n      default: {\n        throw new Error(`Extension ${extension} not supported`)\n      }\n    }\n\n    loader = loader.then((texture) => {\n      if (options.pmrem) {\n        return equirectangularToPMREMCube(texture, renderer)\n      } else {\n        return equirectangularToCube(texture)\n      }\n    })\n  } else {\n    const extension = url[0].slice(url.lastIndexOf('.') + 1)\n\n    switch (extension) {\n      case 'hdr': {\n        loader = new HDRCubeTextureLoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'png':\n      case 'jpg': {\n        loader = new THREE.CubeTextureLoader().loadAsync(url).then((texture) => {\n          if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n            texture.encoding = THREE.sRGBEncoding\n          }\n          return texture\n        })\n        break\n      }\n      default: {\n        throw new Error(`Extension ${extension} not supported`)\n      }\n    }\n\n    loader = loader.then((texture) => {\n      if (options.pmrem) {\n        return cubeToPMREMCube(texture, renderer)\n      } else {\n        return texture\n      }\n    })\n  }\n\n  // apply eventual texture options, such as wrap, repeat...\n  const textureOptions = Object.keys(options).filter(\n    (option) => !['pmrem', 'linear'].includes(option)\n  )\n  textureOptions.forEach((option) => {\n    loader = loader.then((texture) => {\n      texture[option] = options[option]\n      return texture\n    })\n  })\n\n  return loader\n}\n\n// prefilter the equirectangular environment map for irradiance\nfunction equirectangularToPMREMCube(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the cubemap environment map for irradiance\nfunction cubeToPMREMCube(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n\n  const cubeRenderTarget = pmremGenerator.fromCubemap(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// transform an equirectangular texture to a cubetexture that\n// can be used as an envmap or scene background\nfunction equirectangularToCube(texture) {\n  texture.mapping = THREE.EquirectangularReflectionMapping\n  return texture\n}\n","import pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport omit from 'lodash/omit'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\nimport loadGLTF from './loadGLTF'\n\nclass AssetManager {\n  #queue = []\n  #loaded = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n\n    const queued = this._getQueued(url)\n    if (queued) {\n      // if it's already present, add only if the options are different\n      const queuedOptions = omit(queued, ['url', 'type'])\n      if (JSON.stringify(options) !== JSON.stringify(queuedOptions)) {\n        const hash = performance.now().toFixed(3).replace('.', '')\n        const key = `${url}.${hash}`\n        this.#queue.push({ key, url, type: type || this._extractType(url), ...options })\n        return key\n      }\n\n      return queued.url\n    }\n\n    this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (key) => {\n    if (!key) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#loaded[key]\n  }\n\n  // Loads a single asset on demand.\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = performance.now()\n\n      const key = item.key || item.url\n      if (!(key in this.#loaded)) {\n        this.#loaded[key] = await this._loadItem({ renderer, ...item })\n      }\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(\n            performance.now() - itemLoadingStart\n          )}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return key\n    } catch (err) {\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = performance.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = performance.now()\n\n          const key = item.key || item.url\n          if (!(key in this.#loaded)) {\n            this.#loaded[key] = await this._loadItem({ renderer, ...item })\n          }\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(performance.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(`📦 Assets loaded in ${prettyMs(performance.now() - loadingStart)} ⏱`)\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset.\n  _loadItem({ url, type, renderer, ...options }) {\n    switch (type) {\n      case 'gltf':\n        return loadGLTF(url, options)\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'envmap':\n      case 'envMap':\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module'\n\nexport default function loadGLTF(url, options = {}) {\n  return new Promise((resolve, reject) => {\n    const loader = new GLTFLoader()\n\n    if (options.meshOpt) {\n      loader.setMeshoptDecoder(MeshoptDecoder)\n    } else if (options.draco) {\n      const dracoLoader = new DRACOLoader()\n      dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/')\n      loader.setDRACOLoader(dracoLoader)\n    }\n\n    loader.load(url, resolve, null, (err) =>\n      reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n    )\n  })\n}\n","import * as THREE from 'three'\n\nexport default function loadTexture(url, { renderer, ...options }) {\n  if (!renderer) {\n    throw new Error(`Texture requires renderer to passed in the options for ${url}!`)\n  }\n\n  return new Promise((resolve, reject) => {\n    new THREE.TextureLoader().load(\n      url,\n      (texture) => {\n        // apply eventual gamma encoding\n        if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n          texture.encoding = THREE.sRGBEncoding\n        }\n\n        // apply eventual texture options, such as wrap, repeat...\n        const textureOptions = Object.keys(options).filter((option) => !['linear'].includes(option))\n        textureOptions.forEach((option) => {\n          texture[option] = options[option]\n        })\n\n        // Force texture to be uploaded to GPU immediately,\n        // this will avoid \"jank\" on first rendered frame\n        renderer.initTexture(texture)\n\n        resolve(texture)\n      },\n      null,\n      (err) => reject(new Error(`Could not load texture ${url}:\\n${err}`))\n    )\n  })\n}\n","import * as THREE from 'three'\n\n// basic three.js component example\n\nexport default class Box extends THREE.Group {\n  constructor(webgl, options = {}) {\n    super(options)\n    // these can be used also in other methods\n    this.webgl = webgl\n    this.options = options\n\n    // destructure and default values like you do in React\n    const { color = 0x00ff00 } = this.options\n\n    const geometry = new THREE.BoxGeometry(1, 1, 1)\n    const material = new THREE.MeshStandardMaterial({ color })\n    this.box = new THREE.Mesh(geometry, material)\n\n    // add it to the group,\n    // later the group will be added to the scene\n    this.add(this.box)\n  }\n\n  update (dt, time) {\n    this.box.rotation.y += dt * 0.5\n  }\n}\n","// import { EffectPass, VignetteEffect } from 'postprocessing'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport Box from './scene/Box'\nimport { addNaturalLight } from './scene/lights'\n// import { addScreenshotButton, addRecordButton } from './scene/screenshot-record-buttons'\n\n// true if the url has the `?debug` parameter, otherwise false\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\n// https://github.com/marcofugaro/threejs-modern-app#webglapp\nconst webgl = new WebGLApp({\n  canvas,\n  gamma: true,\n  postprocessing: false,\n  showFps: window.DEBUG,\n  orbitControls: window.DEBUG,\n  // config control-panel\n  // https://www.npmjs.com/package/control-panel\n  controls: {\n    roughness: 0.5,\n    movement: {\n      speed: {\n        value: 1.5,\n        max: 100,\n        scale: 'exp',\n      },\n      frequency: { value: 0.5, max: 5 },\n      amplitude: { value: 0.7, max: 2 },\n    },\n  },\n  hideControls: !window.DEBUG,\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // add any \"WebGL components\" here...\n  // append them to the scene so you can\n  // use them from other components easily\n  webgl.scene.box = new Box(webgl)\n  webgl.scene.add(webgl.scene.box)\n\n  // lights and other scene related stuff\n  addNaturalLight(webgl)\n\n  // postprocessing\n  // add an existing effect from the postprocessing library\n  // webgl.composer.addPass(new EffectPass(webgl.camera, new VignetteEffect()))\n\n  // add the save screenshot and save gif buttons\n  /*\n  if (window.DEBUG) {\n    addScreenshotButton(webgl)\n    addRecordButton(webgl)\n  }\n  */\n\n  // show canvas\n  webgl.canvas.style.visibility = ''\n\n  // start animation loop\n  webgl.start()\n})\n","import * as THREE from 'three'\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n}\n"],"sourceRoot":""}